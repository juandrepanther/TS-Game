{"version":3,"sources":["utils/timer.ts","redux/reducers/secReducer.ts","components/Button.tsx","pages/Start.tsx","assets/images/shark-bed.png","redux/reducers/statsReducer.ts","assets/images/shark-small.png","assets/images/shark-daddy.png","utils/sharksStore.ts","assets/images/shark-papa.png","assets/images/shark-grand.png","components/Basket.tsx","redux/reducers/sharkReducer.ts","utils/randomParams.ts","components/Board.tsx","components/Stats.tsx","pages/Game.tsx","pages/Finish.tsx","App.tsx","redux/store/store.ts","index.tsx"],"names":["timer","seconds","counter","intervalId","setInterval","elapsedTime","document","getElementById","innerText","clearInterval","secReducer","createSlice","name","initialState","isStarted","reducers","addSeconds","state","action","payload","decrementSeconds","changeIsStarted","actions","Button","children","option","parseInt","HTML_text_seconds","dispatch","useDispatch","onClick","location","className","to","Start","statsReducer","value","increment","sharks","shark_small","shark_daddy","sharksColor","randomSharkNumber","Math","floor","random","length","Basket","useSelector","sharkIndex","randomStartShark","onDragOver","e","preventDefault","onDrop","src","shark_bed","alt","toUpperCase","sharkReducer","selectShark","randomParams","min","max","Board","useState","show","setShow","navigate","useNavigate","useEffect","interval","prevState","RenderRandomObject","randomNumberClone","style","top","left","draggable","onMouseDown","map","_shark","index","Stats","stats","id","Game","App","path","element","store","configureStore","reducer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d3d276c.chunk.js","sourcesContent":["function returnValue(elapsedTime: number) {\r\n const element = document.getElementById(\"timer\")\r\n element!.innerText = `${elapsedTime - 1} sec.`\r\n}\r\n\r\nexport default function timer(seconds: number) {\r\n let counter = seconds\r\n\r\n const intervalId = setInterval(() => {\r\n  returnValue(counter)\r\n  counter -= 1\r\n  if (counter === 0) {\r\n   clearInterval(intervalId)\r\n  }\r\n }, 1000)\r\n return\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport type { RootState } from \"../store/store\"\r\n\r\ninterface ISeconds {\r\n seconds: number\r\n isStarted: boolean\r\n}\r\n\r\nconst initialState: ISeconds = {\r\n seconds: 0,\r\n isStarted: false\r\n}\r\n\r\nexport const secReducer = createSlice({\r\n name: \"seconds\",\r\n initialState,\r\n reducers: {\r\n  addSeconds: (state, action: PayloadAction<number>) => {\r\n   state.seconds = action.payload\r\n  },\r\n  decrementSeconds: (state) => {\r\n   state.seconds -= 1\r\n  },\r\n  changeIsStarted: (state, action: PayloadAction<boolean>) => {\r\n   state.isStarted = action.payload\r\n  }\r\n }\r\n})\r\n\r\nexport const { addSeconds, decrementSeconds, changeIsStarted } =\r\n secReducer.actions\r\nexport const selectSeconds = (state: RootState) => state.seconds\r\nexport default secReducer.reducer\r\n","import \"../styles/Button.css\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { addSeconds, changeIsStarted } from \"src/redux/reducers/secReducer\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ntype Props = {\r\n children: string\r\n option?: string\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ children, option }) => {\r\n const seconds = parseInt(children)\r\n const HTML_text_seconds = `${seconds} seconds`\r\n const dispatch = useDispatch()\r\n\r\n const setTimerHandler = () => {\r\n  if (option === \"setTimer\") {\r\n   dispatch(addSeconds(seconds))\r\n   dispatch(changeIsStarted(true))\r\n  } else {\r\n   document.location = \"/TS-Game\"\r\n  }\r\n }\r\n\r\n return (\r\n  <Link\r\n   onClick={() => setTimerHandler()}\r\n   className=\"button-6\"\r\n   to={\"/DragElements\"}\r\n  >\r\n   {!option ? children : HTML_text_seconds}\r\n  </Link>\r\n )\r\n}\r\n\r\nexport default Button\r\n","import { ReactElement } from \"react\"\r\nimport Button from \"src/components/Button\"\r\nimport \"../styles/Start.css\"\r\n\r\nexport default function Start(): ReactElement {\r\n return (\r\n  <div className=\"start-page\">\r\n   <div className=\"start-page-title\">Choose Timer value</div>\r\n   <div className=\"btn-wrapper\">\r\n    <Button option=\"setTimer\">10</Button>\r\n    <Button option=\"setTimer\">20</Button>\r\n    <Button option=\"setTimer\">30</Button>\r\n   </div>\r\n  </div>\r\n )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/shark-bed.78259dd6.png\";","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"../store/store\";\r\n\r\ninterface IinitialState {\r\n    value: number;\r\n}\r\n\r\nconst initialState: IinitialState = {\r\n    value: 0\r\n};\r\n\r\nexport const statsReducer = createSlice({\r\n    name: \"stats\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action: PayloadAction<number>) => {\r\n            state.value += action.payload;\r\n        }\r\n    }\r\n});\r\n\r\n//EXPORTS ACTIONS, STATE\r\n\r\nexport const { increment } = statsReducer.actions;\r\nexport const selectStats = (state: RootState) => state.stats;\r\nexport default statsReducer.reducer;\r\n","export default __webpack_public_path__ + \"static/media/shark-small.a7ca0144.png\";","export default __webpack_public_path__ + \"static/media/shark-daddy.43ec729e.png\";","import shark_small from \"../assets/images/shark-small.png\"\r\nimport shark_daddy from \"../assets/images/shark-daddy.png\"\r\nimport shark_papa from \"../assets/images/shark-papa.png\"\r\nimport shark_grand from \"../assets/images/shark-grand.png\"\r\n\r\nexport const sharks = [shark_small, shark_papa, shark_daddy, shark_grand]\r\nexport const sharksColor = ['yellow', 'blue', 'green', 'pink']\r\n\r\nexport const randomSharkNumber = () => Math.floor(Math.random() * sharks.length)","export default __webpack_public_path__ + \"static/media/shark-papa.cd768167.png\";","export default __webpack_public_path__ + \"static/media/shark-grand.7986e720.png\";","import \"../styles/Basket.css\"\r\nimport shark_bed from \"../assets/images/shark-bed.png\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { increment } from \"../redux/reducers/statsReducer\"\r\nimport { RootState } from \"src/redux/store/store\"\r\nimport { sharksColor } from \"src/utils/sharksStore\"\r\n\r\nexport const Basket = () => {\r\n const dispatch = useDispatch()\r\n const { sharkIndex, randomStartShark } = useSelector(\r\n  (state: RootState) => state.sharkIndex\r\n )\r\n\r\n //LOGIC ON COLLECTION FROM RANDOM SHARK START INDEX\r\n const countStats = () =>\r\n  sharkIndex === randomStartShark && dispatch(increment(1))\r\n\r\n return (\r\n  <div\r\n   onDragOver={(e) => e.preventDefault()}\r\n   onDrop={() => countStats()}\r\n   className=\"basket\"\r\n  >\r\n   <img src={shark_bed} alt=\"\" className=\"shark-bed\" />\r\n   <div className=\"shark-bed-title\">{`Drop ${sharksColor[\r\n    randomStartShark\r\n   ].toUpperCase()} baby-sharks`}</div>\r\n  </div>\r\n )\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { randomSharkNumber } from \"src/utils/sharksStore\"\r\nimport type { RootState } from \"../store/store\"\r\n\r\ninterface ISeconds {\r\n sharkIndex: number,\r\n randomStartShark: number\r\n}\r\n\r\nconst initialState: ISeconds = {\r\n sharkIndex: 0,\r\n randomStartShark: randomSharkNumber()\r\n}\r\n\r\nexport const sharkReducer = createSlice({\r\n name: \"sharkIndex\",\r\n initialState,\r\n reducers: {\r\n  selectShark: (state, action: PayloadAction<number>) => {\r\n   state.sharkIndex = action.payload\r\n  },\r\n  \r\n }\r\n})\r\n\r\nexport const { selectShark } =\r\n sharkReducer.actions\r\nexport const selectSharkIndex = (state: RootState) => state.sharkIndex\r\nexport default sharkReducer.reducer\r\n","export const randomParams = (min: number, max: number): number => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n   }","import { ReactElement, useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { changeIsStarted } from \"src/redux/reducers/secReducer\"\r\nimport \"../styles/Board.css\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { selectShark } from \"src/redux/reducers/sharkReducer\"\r\nimport { sharks, randomSharkNumber } from \"src/utils/sharksStore\"\r\nimport { randomParams } from \"src/utils/randomParams\"\r\n\r\nexport default function Board(): ReactElement {\r\n const [show, setShow] = useState(true)\r\n const dispatch = useDispatch()\r\n const navigate = useNavigate()\r\n\r\n useEffect(() => {\r\n  const interval = setInterval(() => {\r\n   const count = document.getElementById(\"timer\")?.innerText\r\n   if (count !== \"0 sec.\") {\r\n    setShow((prevState) => !prevState)\r\n    dispatch(changeIsStarted(false))\r\n   } else {\r\n    clearInterval(interval)\r\n    navigate(\"/TS-Game-Finish\")\r\n   }\r\n  }, 1500)\r\n  return () => clearInterval(interval)\r\n }, [dispatch, navigate])\r\n\r\n const sharkHandler = (sharkIndex: number) => dispatch(selectShark(sharkIndex))\r\n\r\n const RenderRandomObject = () => {\r\n  const randomNumberClone = randomSharkNumber()\r\n  return (\r\n   <div\r\n    style={{\r\n     top: `${randomParams(0, 470)}px`,\r\n     left: `${randomParams(0, 470)}px`\r\n    }}\r\n    draggable\r\n    className=\"random-object\"\r\n   >\r\n    <img\r\n     src={sharks[randomNumberClone]}\r\n     alt=\"\"\r\n     className={`main-shark-${randomSharkNumber()}`}\r\n     onMouseDown={() => sharkHandler(randomNumberClone)}\r\n    />\r\n   </div>\r\n  )\r\n }\r\n return (\r\n  <div className=\"board\">\r\n   {show &&\r\n    sharks.map((_shark, index) => {\r\n     return <RenderRandomObject key={index} />\r\n    })}\r\n  </div>\r\n )\r\n}\r\n","import { ReactElement } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../redux/store/store\"\r\n\r\nimport \"../styles/Stats.css\"\r\n\r\nexport default function Stats(): ReactElement {\r\n const value = useSelector((state: RootState) => state.stats.value)\r\n\r\n return (\r\n  <div className=\"stats\">\r\n   {value}\r\n   <div className=\"timer-title\">TIMER</div>\r\n   <div id=\"timer\"></div>\r\n  </div>\r\n )\r\n}\r\n","import { ReactElement } from 'react'\r\nimport { Basket } from 'src/components/Basket'\r\nimport Board from 'src/components/Board'\r\nimport Stats from 'src/components/Stats'\r\n\r\n\r\n\r\nexport default function Game(): ReactElement {\r\n    return (\r\n        <>\r\n          <Board />\r\n          <Basket />\r\n          <Stats />  \r\n        </>\r\n    )\r\n}\r\n","import { ReactElement } from \"react\"\r\nimport \"../styles/Finish.css\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"src/redux/store/store\"\r\nimport { sharksColor } from \"src/utils/sharksStore\"\r\nimport Button from \"src/components/Button\"\r\n\r\nexport default function Start(): ReactElement {\r\n const {\r\n  stats: { value },\r\n  seconds: { seconds },\r\n  sharkIndex: { randomStartShark }\r\n } = useSelector((state: RootState) => state)\r\n return (\r\n  <div className=\"finish-page\">\r\n   <div className=\"finish-page-title\">Your Results:</div>\r\n   <div className=\"finish-page-result\">\r\n    {`Within ${seconds} seconds you collected ${value} ${sharksColor[\r\n     randomStartShark\r\n    ].toUpperCase()} baby-sharks.`}\r\n   </div>\r\n   <Button>RE-START</Button>\r\n  </div>\r\n )\r\n}\r\n","import \"./styles/App.css\"\n\n//TIMER IMPORTS\nimport timer from \"./utils/timer\"\nimport { useSelector } from \"react-redux\"\nimport { RootState } from \"./redux/store/store\"\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\"\nimport Start from \"./pages/Start\"\nimport Game from \"./pages/Game\"\nimport Finish from \"./pages/Finish\"\n\nfunction App() {\n //EXECUTING TIMER UTILITY\n const { seconds, isStarted } = useSelector((state: RootState) => state.seconds)\n\n isStarted && timer(seconds)\n\n return (\n  <BrowserRouter>\n   <div className=\"app-container\">\n    <Routes>\n     <Route path=\"/DragElements\" element={<Game />} />\n     <Route path=\"/TS-Game\" element={<Start />} />\n     <Route path=\"/TS-Game-Finish\" element={<Finish />} />\n    </Routes>\n   </div>\n  </BrowserRouter>\n )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport secReducer from \"../reducers/secReducer\"\r\nimport sharkReducer from \"../reducers/sharkReducer\"\r\nimport statsReducer from \"../reducers/statsReducer\"\r\n\r\nexport const store = configureStore({\r\n reducer: {\r\n  stats: statsReducer,\r\n  seconds: secReducer,\r\n  sharkIndex: sharkReducer\r\n }\r\n})\r\n\r\n//EXPORTS TYPES\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/store/store\"\n\nReactDOM.render(\n <React.StrictMode>\n  <Provider store={store}>\n   <App />\n  </Provider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n)\n"],"sourceRoot":""}