{"version":3,"sources":["components/Board.tsx","components/Stats.tsx","redux/reducers/statsReducer.ts","components/Basket.tsx","App.tsx","redux/store/store.ts","index.tsx"],"names":["Board","useState","show","setShow","useEffect","interval","setInterval","prevState","clearInterval","randomParams","min","max","Math","floor","random","RenderRandomObject","style","top","left","draggable","className","Stats","value","useSelector","state","stats","statsReducer","createSlice","name","initialState","reducers","increment","action","payload","actions","Basket","dispatch","useDispatch","onDragOver","e","preventDefault","onDrop","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAIe,SAASA,IAAuB,IAAD,EACrBC,oBAAS,GADY,mBACtCC,EADsC,KAChCC,EADgC,KAG7CC,qBAAU,WACT,IAAMC,EAAWC,aAAY,WAC5BH,GAAQ,SAACI,GAAD,OAAgBA,OACtB,KACH,OAAO,kBAAMC,cAAcH,MACzB,IAIH,IAAMI,EAAe,SAACC,EAAaC,GAClC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAG/CK,EAAqB,WAC1B,OACC,qBACCC,MAAO,CACNC,IAAI,GAAD,OAAKR,EAAa,EAAG,KAArB,MACHS,KAAK,GAAD,OAAKT,EAAa,EAAG,KAArB,OAELU,WAAS,EACTC,UAAU,mBAIb,OAAO,qBAAKA,UAAU,QAAf,SAAwBlB,GAAQ,cAACa,EAAD,M,iBC1BzB,SAASM,IACvB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,MAAMH,SAC5D,OAAO,qBAAKF,UAAU,QAAf,SAAwBE,I,iBCGnBI,EAAeC,YAAY,CACpCC,KAAM,QACNC,aANgC,CAChCP,MAAO,GAMPQ,SAAU,CACNC,UAAW,SAACP,EAAOQ,GACfR,EAAMF,OAASU,EAAOC,YAOnBF,EAAcL,EAAaQ,QAA3BH,UAEAL,IAAf,QCpBaS,EAAS,WACrB,IAAMC,EAAWC,cAIjB,OACC,qBACCC,WAAY,SAACC,GAAD,OAAOA,EAAEC,kBACrBC,OAAQ,kBALeL,EAASL,EAAU,KAM1CX,UAAU,SAHX,wBCKasB,MAVf,WACC,OACC,sBAAKtB,UAAU,gBAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCRUuB,EAAQC,YAAe,CAChCC,QAAS,CACLpB,MAAOC,KCEfoB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGFM,SAASC,eAAe,W","file":"static/js/main.2f5aa0ef.chunk.js","sourcesContent":["import { ReactElement, useEffect, useState } from \"react\"\r\n\r\nimport \"../styles/Board.css\"\r\n\r\nexport default function Board(): ReactElement {\r\n const [show, setShow] = useState(true)\r\n\r\n useEffect(() => {\r\n  const interval = setInterval(() => {\r\n   setShow((prevState) => !prevState)\r\n  }, 2000)\r\n  return () => clearInterval(interval)\r\n }, [])\r\n\r\n //RANDOM WIDTH & HEIGHT\r\n\r\n const randomParams = (min: number, max: number): number => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n }\r\n\r\n const RenderRandomObject = () => {\r\n  return (\r\n   <div\r\n    style={{\r\n     top: `${randomParams(0, 470)}px`,\r\n     left: `${randomParams(0, 470)}px`\r\n    }}\r\n    draggable\r\n    className=\"random-object\"\r\n   ></div>\r\n  )\r\n }\r\n return <div className=\"board\">{show && <RenderRandomObject />}</div>\r\n}\r\n","import { ReactElement } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../redux/store/store\"\r\n\r\nimport \"../styles/Stats.css\"\r\n\r\nexport default function Stats(): ReactElement {\r\n const value = useSelector((state: RootState) => state.stats.value)\r\n return <div className=\"stats\">{value}</div>\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"../store/store\";\r\n\r\ninterface IinitialState {\r\n    value: number;\r\n}\r\n\r\nconst initialState: IinitialState = {\r\n    value: 0\r\n};\r\n\r\nexport const statsReducer = createSlice({\r\n    name: \"stats\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action: PayloadAction<number>) => {\r\n            state.value += action.payload;\r\n        }\r\n    }\r\n});\r\n\r\n//EXPORTS ACTIONS, STATE\r\n\r\nexport const { increment } = statsReducer.actions;\r\nexport const selectStats = (state: RootState) => state.stats;\r\nexport default statsReducer.reducer;\r\n","import \"../styles/Basket.css\"\r\n\r\nimport { useDispatch } from \"react-redux\"\r\nimport { increment } from \"../redux/reducers/statsReducer\"\r\n\r\nexport const Basket = () => {\r\n const dispatch = useDispatch()\r\n\r\n const countStats = () => dispatch(increment(1))\r\n\r\n return (\r\n  <div\r\n   onDragOver={(e) => e.preventDefault()}\r\n   onDrop={() => countStats()}\r\n   className=\"basket\"\r\n  >\r\n   DROP HERE\r\n  </div>\r\n )\r\n}\r\n","import \"./styles/App.css\"\n\nimport Board from \"./components/Board\"\nimport Stats from \"./components/Stats\"\nimport { Basket } from \"./components/Basket\"\n\nfunction App() {\n return (\n  <div className=\"app-container\">\n   <Board />\n   <Basket />\n   <Stats />\n  </div>\n )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport statsReducer from \"../reducers/statsReducer\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        stats: statsReducer\r\n    }\r\n});\r\n\r\n//EXPORTS TYPES\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/store/store\"\n\nReactDOM.render(\n <React.StrictMode>\n  <Provider store={store}>\n   <App />\n  </Provider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n)\n"],"sourceRoot":""}