{"version":3,"sources":["utils/timer.ts","redux/reducers/secReducer.ts","components/Button.tsx","pages/Start.tsx","redux/reducers/statsReducer.ts","components/Basket.tsx","components/Board.tsx","components/Stats.tsx","pages/Game.tsx","pages/Finish.tsx","App.tsx","redux/store/store.ts","index.tsx"],"names":["timer","seconds","counter","intervalId","setInterval","elapsedTime","document","getElementById","innerText","clearInterval","secReducer","createSlice","name","initialState","isStarted","reducers","addSeconds","state","action","payload","decrementSeconds","changeIsStarted","actions","Button","children","parseInt","dispatch","useDispatch","onClick","className","to","Start","statsReducer","value","increment","Basket","onDragOver","e","preventDefault","onDrop","Board","useState","show","setShow","navigate","useNavigate","useEffect","interval","prevState","console","log","randomParams","min","max","Math","floor","random","RenderRandomObject","style","top","left","draggable","Stats","useSelector","stats","id","Game","App","path","element","store","configureStore","reducer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c78075eb.chunk.js","sourcesContent":["function returnValue(elapsedTime: number) {\r\n const element = document.getElementById(\"timer\")\r\n element!.innerText = `${elapsedTime - 1} sec.`\r\n}\r\n\r\nexport default function timer(seconds: number) {\r\n let counter = seconds\r\n\r\n const intervalId = setInterval(() => {\r\n  returnValue(counter)\r\n  counter -= 1\r\n  if (counter === 0) {\r\n   clearInterval(intervalId)\r\n  }\r\n }, 1000)\r\n return\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport type { RootState } from \"../store/store\"\r\n\r\ninterface ISeconds {\r\n seconds: number\r\n isStarted: boolean\r\n}\r\n\r\nconst initialState: ISeconds = {\r\n seconds: 0,\r\n isStarted: false\r\n}\r\n\r\nexport const secReducer = createSlice({\r\n name: \"seconds\",\r\n initialState,\r\n reducers: {\r\n  addSeconds: (state, action: PayloadAction<number>) => {\r\n   state.seconds = action.payload\r\n  },\r\n  decrementSeconds: (state) => {\r\n   state.seconds -= 1\r\n  },\r\n  changeIsStarted: (state, action: PayloadAction<boolean>) => {\r\n   state.isStarted = action.payload\r\n  }\r\n }\r\n})\r\n\r\nexport const { addSeconds, decrementSeconds, changeIsStarted } =\r\n secReducer.actions\r\nexport const selectSeconds = (state: RootState) => state.seconds\r\nexport default secReducer.reducer\r\n","import \"../styles/Button.css\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { addSeconds, changeIsStarted } from \"src/redux/reducers/secReducer\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ntype Props = {\r\n children: string\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ children }) => {\r\n const seconds = parseInt(children)\r\n const dispatch = useDispatch()\r\n\r\n const setTimerHandler = () => {\r\n  dispatch(addSeconds(seconds))\r\n  dispatch(changeIsStarted(true))\r\n }\r\n\r\n return (\r\n  <Link\r\n   onClick={() => setTimerHandler()}\r\n   className=\"button-6\"\r\n   to={\"/DragElements\"}\r\n  >{`${seconds} seconds`}</Link>\r\n )\r\n}\r\n\r\nexport default Button\r\n","import  { ReactElement } from 'react'\r\nimport Button from 'src/components/Button'\r\nimport '../styles/Start.css'\r\n\r\n\r\nexport default function Start(): ReactElement {\r\n    return (\r\n        <div className='start-page'>\r\n            <div className=\"start-page-title\">Choose Timer value</div>\r\n            <div className=\"btn-wrapper\">\r\n                <Button>10</Button>\r\n                <Button>20</Button>\r\n                <Button>30</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"../store/store\";\r\n\r\ninterface IinitialState {\r\n    value: number;\r\n}\r\n\r\nconst initialState: IinitialState = {\r\n    value: 0\r\n};\r\n\r\nexport const statsReducer = createSlice({\r\n    name: \"stats\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action: PayloadAction<number>) => {\r\n            state.value += action.payload;\r\n        }\r\n    }\r\n});\r\n\r\n//EXPORTS ACTIONS, STATE\r\n\r\nexport const { increment } = statsReducer.actions;\r\nexport const selectStats = (state: RootState) => state.stats;\r\nexport default statsReducer.reducer;\r\n","import \"../styles/Basket.css\"\r\n\r\nimport { useDispatch } from \"react-redux\"\r\nimport { increment } from \"../redux/reducers/statsReducer\"\r\n\r\nexport const Basket = () => {\r\n const dispatch = useDispatch()\r\n\r\n const countStats = () => dispatch(increment(1))\r\n\r\n return (\r\n  <div\r\n   onDragOver={(e) => e.preventDefault()}\r\n   onDrop={() => countStats()}\r\n   className=\"basket\"\r\n  >\r\n   DROP HERE\r\n  </div>\r\n )\r\n}\r\n","import { ReactElement, useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { changeIsStarted } from \"src/redux/reducers/secReducer\"\r\nimport \"../styles/Board.css\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nexport default function Board(): ReactElement {\r\n const [show, setShow] = useState(true)\r\n const dispatch = useDispatch()\r\n const navigate = useNavigate()\r\n\r\n useEffect(() => {\r\n  const interval = setInterval(() => {\r\n   const count = document.getElementById(\"timer\")?.innerText\r\n   if (count !== \"0 sec.\") {\r\n    setShow((prevState) => !prevState)\r\n    dispatch(changeIsStarted(false))\r\n   } else {\r\n    console.log(\"here must be trigger to final page\")\r\n    clearInterval(interval)\r\n    navigate(\"/TS-Game-Finish\")\r\n    //window.history.pushState({}, \"\", \"/TS-Game-Finish\")\r\n   }\r\n  }, 1000)\r\n  return () => clearInterval(interval)\r\n }, [dispatch, navigate])\r\n\r\n //RANDOM WIDTH & HEIGHT\r\n\r\n const randomParams = (min: number, max: number): number => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n }\r\n\r\n const RenderRandomObject = () => {\r\n  return (\r\n   <div\r\n    style={{\r\n     top: `${randomParams(0, 470)}px`,\r\n     left: `${randomParams(0, 470)}px`\r\n    }}\r\n    draggable\r\n    className=\"random-object\"\r\n   ></div>\r\n  )\r\n }\r\n return <div className=\"board\">{show && <RenderRandomObject />}</div>\r\n}\r\n","import { ReactElement } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../redux/store/store\"\r\n\r\nimport \"../styles/Stats.css\"\r\n\r\nexport default function Stats(): ReactElement {\r\n const value = useSelector((state: RootState) => state.stats.value)\r\n\r\n return (\r\n  <div className=\"stats\">\r\n   {value}\r\n   <div className=\"timer-title\">TIMER</div>\r\n   <div id=\"timer\"></div>\r\n  </div>\r\n )\r\n}\r\n","import { ReactElement } from 'react'\r\nimport { Basket } from 'src/components/Basket'\r\nimport Board from 'src/components/Board'\r\nimport Stats from 'src/components/Stats'\r\n\r\n\r\n\r\nexport default function Game(): ReactElement {\r\n    return (\r\n        <>\r\n          <Board />\r\n          <Basket />\r\n          <Stats />  \r\n        </>\r\n    )\r\n}\r\n","import { ReactElement } from \"react\"\r\nimport \"../styles/Finish.css\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"src/redux/store/store\"\r\n\r\nexport default function Start(): ReactElement {\r\n const {\r\n  stats: { value },\r\n  seconds: { seconds }\r\n } = useSelector((state: RootState) => state)\r\n return (\r\n  <div className=\"finish-page\">\r\n   <div className=\"finish-page-title\">Your Results:</div>\r\n   <div className=\"finish-page-result\">\r\n    {`Within ${seconds} seconds you collected ${value} objects.`}\r\n   </div>\r\n  </div>\r\n )\r\n}\r\n","import \"./styles/App.css\"\n\n//TIMER IMPORTS\nimport timer from \"./utils/timer\"\nimport { useSelector } from \"react-redux\"\nimport { RootState } from \"./redux/store/store\"\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\"\nimport Start from \"./pages/Start\"\nimport Game from \"./pages/Game\"\nimport Finish from \"./pages/Finish\"\n\nfunction App() {\n //EXECUTING TIMER UTILITY\n const { seconds, isStarted } = useSelector((state: RootState) => state.seconds)\n\n isStarted && timer(seconds)\n\n return (\n  <BrowserRouter>\n   <div className=\"app-container\">\n    <Routes>\n     <Route path=\"/DragElements\" element={<Game />} />\n     <Route path=\"/TS-Game\" element={<Start />} />\n     <Route path=\"/TS-Game-Finish\" element={<Finish />} />\n    </Routes>\n   </div>\n  </BrowserRouter>\n )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport secReducer from \"../reducers/secReducer\"\r\nimport statsReducer from \"../reducers/statsReducer\"\r\n\r\nexport const store = configureStore({\r\n reducer: {\r\n  stats: statsReducer,\r\n  seconds: secReducer\r\n }\r\n})\r\n\r\n//EXPORTS TYPES\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/store/store\"\n\nReactDOM.render(\n <React.StrictMode>\n  <Provider store={store}>\n   <App />\n  </Provider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n)\n"],"sourceRoot":""}